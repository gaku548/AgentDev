#!/bin/bash
# Auto Daily Report Trigger
# Ëá™ÂãïÊó•Â†±‰ΩúÊàê„Éà„É™„Ç¨„Éº„Çπ„ÇØ„É™„Éó„Éà

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LOG_FILE="/tmp/agentdev_auto_report.log"

# „É≠„Ç∞Èñ¢Êï∞
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# ÊôÇÈñì„ÉÅ„Çß„ÉÉ„ÇØÈñ¢Êï∞
check_time_trigger() {
    local current_hour=$(date '+%H')
    local current_minute=$(date '+%M')
    
    # 4:30 AM „ÉÅ„Çß„ÉÉ„ÇØ
    if [ "$current_hour" = "04" ] && [ "$current_minute" = "30" ]; then
        return 0  # „Éà„É™„Ç¨„ÉºÊù°‰ª∂„Å´‰∏ÄËá¥
    fi
    
    return 1  # „Éà„É™„Ç¨„ÉºÊù°‰ª∂„Å´‰∏ç‰∏ÄËá¥
}

# Claude Code„Éó„É≠„Çª„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
check_claude_running() {
    if pgrep -f "claude" > /dev/null; then
        return 0  # ClaudeÂÆüË°å‰∏≠
    fi
    return 1  # ClaudeÂÅúÊ≠¢‰∏≠
}

# Êó•Â†±‰ΩúÊàêÂÆüË°å
trigger_report_creation() {
    local trigger_type="$1"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    log "Triggering daily report creation: $trigger_type"
    
    # Êó•Â†±„Éá„Ç£„É¨„ÇØ„Éà„É™Á¢∫‰øù
    mkdir -p "/mnt/c/AgentDev/daily-reports"
    
    # ‰ΩúÊ•≠„É≠„Ç∞ÂÆüË°å
    if [ -f "$SCRIPT_DIR/create-daily-report.py" ]; then
        python3 "$SCRIPT_DIR/create-daily-report.py" >> "$LOG_FILE" 2>&1
    fi
    
    # „Éà„É™„Ç¨„Éº„Éï„Ç°„Ç§„É´‰ΩúÊàêÔºàClaude„ÅåÊ§úÂá∫Áî®Ôºâ
    local trigger_file="/mnt/c/AgentDev/daily-reports/.trigger-$(date '+%Y-%m-%d')"
    
    cat > "$trigger_file" << EOF
{
    "trigger_type": "$trigger_type",
    "timestamp": "$timestamp",
    "message": "Daily report creation requested",
    "claude_instruction": "Please create a comprehensive daily report using the template in CLAUDE.md"
}
EOF
    
    log "Trigger file created: $trigger_file"
    return 0
}

# „Éà„Éº„ÇØ„É≥Âà∂ÈôêÊ§úÂá∫ÔºàÁ∞°ÊòìÁâàÔºâ
check_token_limit() {
    # Claude Code„ÅÆ„É¨„Çπ„Éù„É≥„ÇπÊôÇÈñì„ÇÑ‰∏ÄËà¨ÁöÑ„Å™Âà∂Èôê„Éë„Çø„Éº„É≥„Çí„ÉÅ„Çß„ÉÉ„ÇØ
    # ÂÆüÈöõ„ÅÆÂÆüË£Ö„Åß„ÅØ„ÄÅClaude Code„ÅÆÂá∫Âäõ„ÇÑ„É¨„Çπ„Éù„É≥„ÇπÊôÇÈñì„ÇíÁõ£Ë¶ñ
    
    local recent_errors=$(grep -c "rate limit\|token limit\|quota" "$LOG_FILE" 2>/dev/null || echo "0")
    
    if [ "$recent_errors" -gt 0 ]; then
        return 0  # Âà∂ÈôêÊ§úÂá∫
    fi
    
    return 1  # Âà∂ÈôêÊú™Ê§úÂá∫
}

# „É°„Ç§„É≥Áõ£Ë¶ñ„É´„Éº„Éó
monitor_and_trigger() {
    log "Starting daily report monitoring..."
    
    while true; do
        # ÊôÇÈñì„Éà„É™„Ç¨„Éº„ÉÅ„Çß„ÉÉ„ÇØ
        if check_time_trigger; then
            if check_claude_running; then
                trigger_report_creation "scheduled"
            else
                log "Scheduled trigger time reached, but Claude not running"
            fi
            # 1ÊôÇÈñìÂæÖÊ©üÔºàÂêå„ÅòÊôÇÈñì„Å´ÈáçË§áÂÆüË°åÈò≤Ê≠¢Ôºâ
            sleep 3600
        fi
        
        # „Éà„Éº„ÇØ„É≥Âà∂Èôê„ÉÅ„Çß„ÉÉ„ÇØ
        if check_token_limit; then
            if check_claude_running; then
                trigger_report_creation "token_limit"
                log "Token limit detected, report triggered"
            fi
            # 30ÂàÜÂæÖÊ©üÔºàÂà∂ÈôêËß£Èô§„Åæ„ÅßÔºâ
            sleep 1800
        fi
        
        # 1ÂàÜÈñìÈöî„Åß„ÉÅ„Çß„ÉÉ„ÇØ
        sleep 60
    done
}

# ÊâãÂãï„Éà„É™„Ç¨„Éº
manual_trigger() {
    local trigger_type="${1:-manual}"
    
    log "Manual daily report trigger: $trigger_type"
    trigger_report_creation "$trigger_type"
    
    echo "üìã Daily report trigger activated"
    echo "üïê Timestamp: $(date '+%Y-%m-%d %H:%M:%S')"
    echo "üìÅ Check: /mnt/c/AgentDev/daily-reports/"
    echo ""
    echo "Claude should now create the detailed report."
}

# „Çπ„ÉÜ„Éº„Çø„ÇπË°®Á§∫
show_status() {
    echo "ü§ñ Auto Report Trigger Status"
    echo ""
    
    if pgrep -f "auto-report-trigger" > /dev/null; then
        echo "‚úÖ Monitoring: ACTIVE"
    else
        echo "‚ùå Monitoring: INACTIVE"
    fi
    
    echo "üìä Next scheduled trigger: Tomorrow 04:30"
    echo "üìù Log file: $LOG_FILE"
    
    if [ -f "$LOG_FILE" ]; then
        local last_entry=$(tail -1 "$LOG_FILE" 2>/dev/null || echo "No entries")
        echo "üìÑ Last log: $last_entry"
    fi
    
    echo ""
    echo "Commands:"
    echo "  $0 start     - Start monitoring"
    echo "  $0 trigger   - Manual trigger"
    echo "  $0 stop      - Stop monitoring" 
}

# Áõ£Ë¶ñÂÅúÊ≠¢
stop_monitoring() {
    local pids=$(pgrep -f "auto-report-trigger" || echo "")
    
    if [ -n "$pids" ]; then
        echo "$pids" | xargs kill
        log "Auto report monitoring stopped"
        echo "üõë Monitoring stopped"
    else
        echo "‚ö†Ô∏è  No monitoring process found"
    fi
}

# „É°„Ç§„É≥Âá¶ÁêÜ
case "${1:-status}" in
    "start")
        if pgrep -f "auto-report-trigger" > /dev/null; then
            echo "‚ö†Ô∏è  Monitoring already running"
        else
            echo "üöÄ Starting auto report monitoring..."
            monitor_and_trigger &
            echo "‚úÖ Monitoring started (PID: $!)"
        fi
        ;;
    "trigger")
        manual_trigger "${2:-manual}"
        ;;
    "stop")
        stop_monitoring
        ;;
    "status")
        show_status
        ;;
    *)
        echo "Usage: $0 {start|trigger|stop|status}"
        exit 1
        ;;
esac